#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (413)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root" (
    references = None
)
{
    reorder nameChildren = ["pickUpCard_mp3", "Transform", "Round_Table", "Light"]
    float3 xformOp:scale = (0.01, 0.01, 0.01)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def RealityKitAudioFile "pickUpCard_mp3"
    {
        uniform asset file = @pickUpCard.mp3@
    }

    def Xform "Transform" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0, 0)
        }
        references = None
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "SpatialAudio"
        {
            uniform token info:id = "RealityKit.SpatialAudio"
            float rolloffFactor = 0
        }
    }

    def "Round_Table" (
        active = true
        references = @textures/cards/Round_Table.usda@
    )
    {
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, -0.76, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "ImageBasedLight" (
            active = false
        )
        {
            asset ibl = @library.jpg@
            uniform token info:id = "RealityKit.ImageBasedLight"
            float intensityExponent = 1
            bool isGlobalIBL = 0
        }

        def RealityKitComponent "ImageBasedLightReceiver" (
            active = false
        )
        {
            rel iblEntity = </Root/Round_Table>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }
    }

    def Xform "Light" (
        active = true
        customData = {
            float3 rotationEulerHint = (-0.78539807, 0, 0)
        }
    )
    {
        quatf xformOp:orient = (0.92387956, -0.3826834, 0, 0)
        float3 xformOp:translate = (0, 24.653217, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "DirectionalLight"
        {
            uniform token info:id = "RealityKit.DirectionalLight"
            float intensity = 2000

            def RealityKitStruct "Shadow"
            {
                bool isEnabled = 0
            }
        }
    }
}

